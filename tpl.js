// Generated by CoffeeScript 1.9.3

/*
 * tpl 打包 ( 单页应用需要 )
 * @author jackie Lin <dashi_lin@163.com>
 */
'use strict';
var FS, _, buildTpl, getRequireKey, path, through2;

through2 = require('through2');

FS = require("q-io/fs");

path = require('path');

_ = require('lodash');


/*
 * 生成 tpl 信息
 */

buildTpl = function(contents, title) {
  if (title == null) {
    title = '';
  }
  return "define(\"" + title + "\", function() {\n    \"use strict\";\n    return " + contents + "\n});";
};


/*
 * 获取 require 文件信息
 */

getRequireKey = function(srcPath) {
  var baseName, packageName;
  baseName = path.basename(srcPath);
  packageName = path.basename(path.join(srcPath, '../'));
  return packageName + '/' + baseName;
};

exports.build = function() {
  var fileList;
  fileList = [];
  return through2.obj(function(file, enc, callback) {
    var srcPath;
    srcPath = file.path;
    return FS.stat(srcPath).then(function(stat) {
      if (stat.isDirectory() === false) {
        throw new Error('%s is not directory', srcPath);
      }
      return FS.list(srcPath);
    }).then(function(list) {
      return _.select(list, function(item) {
        return path.extname(item) === '.html';
      });
    }).then(function(list) {
      var task;
      task = [];
      fileList = list;
      list.forEach(function(v) {
        return task.push(FS.read(path.join(srcPath, v)));
      });
      return task;
    }).spread(function() {
      var args, content, fileName;
      content = {};
      args = Array.prototype.slice.call(arguments);
      fileList.forEach(function(v, k) {
        return content[v] = args[k];
      });
      fileName = path.basename(srcPath);
      file.contents = new Buffer(buildTpl(JSON.stringify(content), getRequireKey(srcPath)));
      file.path = path.join(srcPath, fileName + '.min.js');
      return callback(null, file);
    }).fail(function(err) {
      return callback(err, null);
    });
  });
};
